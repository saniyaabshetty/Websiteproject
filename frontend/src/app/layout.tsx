"use client";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import Axios from "axios"
import { useEffect } from "react";
import { useImmerReducer } from "use-immer"
import DispatchContext from "./DispatchContext";
import StateContext from "./StateContext";
import { Toaster } from "react-hot-toast";
import { FloatingNav } from "@/components/ui/floating-navbar";
import { Userfeedback } from "@/components/";
import { IconHome, IconMessage, IconUser } from "@tabler/icons-react";
import { FaBagShopping, FaChair, FaDollarSign, FaFlag, FaLock, FaTable, FaUserGroup } from "react-icons/fa6";
import { LocalizationProvider } from "@sujalchoudhari/localization";
Axios.defaults.baseURL = "http://192.168.36.33:8080"
const inter = Inter({ subsets: ["latin"] });

const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const isServer = typeof window === 'undefined';

  const initialState = {
    loggedIn: !isServer && Boolean(localStorage.getItem("token")),
    user: {
      id: !isServer && localStorage.getItem("id"),
      name: !isServer && localStorage.getItem("name"),
      role: !isServer && localStorage.getItem("role"),
      token: !isServer && localStorage.getItem("token"),
    }
  }

  function ourReducer(draft, action) {
    switch (action.type) {
      case "login":
        draft.loggedIn = true
        draft.user = action.data
        break;
      case "logout":
        draft.loggedIn = false
        break;
    }
  }

  const [state, dispatch] = useImmerReducer(ourReducer, initialState)

  useEffect(() => {
    if (!isServer) {
      if (state.loggedIn) {
        localStorage.setItem("id", state.user.id)
        localStorage.setItem("name", state.user.name)
        localStorage.setItem("role", state.user.role)
        localStorage.setItem("token", state.user.token)
      } else {
        localStorage.removeItem("token")
        localStorage.removeItem("id")
        localStorage.removeItem("role")
        localStorage.removeItem("name")
      }
    }
  }, [state.loggedIn])
  const navItems = [
    {
      name: "Home",
      link: "/",
      icon: <IconHome className="h-4 w-4 text-neutral-500 dark:text-white" />,
    },
    {
      name: "Discover",
      link: "/community",
      icon: <FaUserGroup className="h-4 w-4 text-neutral-500 dark:text-white" />,
    }, 
    {
      name: "Login",
      link: "/login",
      icon: <FaLock className="h-4 w-4 text-neutral-500 dark:text-white" />,
    },
    {
      name: "Register",
      link: "/register",
      icon: <FaFlag className="h-4 w-4 text-neutral-500 dark:text-white" />,
    },
    {
      name: "Feedback",
      link: "/userfeedback",
      icon: <FaFlag className="h-4 w-4 text-neutral-500 dark:text-white" />,
    },
  ];

  return (
    <html lang="en">

      <body className={inter.className}>
        {/* <div className="absolute top-0 -z-10 h-full w-full bg-white"><div className="absolute bottom-auto left-auto right-0 top-0 h-[400px] w-[1000px] -translate-x-[10%] translate-y-[50%] rounded-full bg-[rgba(109,244,244,0.5)] opacity-50 blur-[80px]"></div></div> */}
        <div className="bg-[#FFA500] absolute top-[-6rem] -z-10 right-[11rem] h-[31.25rem] w-[31.25rem] rounded-full blur-[10rem] sm:w-[68.75rem] dark:bg-[#946263]"></div>
        <div className="bg-[#FFA500] absolute top-[-1rem] -z-10 left-[-35rem] h-[31.25rem] w-[50rem] rounded-full blur-[10rem] sm:w-[68.75rem] md:left-[-33rem] lg:left-[-28rem] xl:left-[-15rem] 2xl:left-[-5rem] dark:bg-[#676394]"></div>
<LocalizationProvider>
          <FloatingNav navItems={navItems} />
          <StateContext.Provider value={state}>
            <DispatchContext.Provider value={dispatch}>
              <Toaster />
              <main className="mt-20 ">
                {children}
              </main>
            </DispatchContext.Provider>
          </StateContext.Provider>
        </LocalizationProvider>  
      </body>
    </html>
  );
}